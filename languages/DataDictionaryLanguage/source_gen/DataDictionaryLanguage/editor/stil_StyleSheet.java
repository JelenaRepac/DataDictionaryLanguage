package DataDictionaryLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.editor.runtime.style.AbstractStyleClass;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.editor.runtime.descriptor.EditorBuilderEnvironment;
import jetbrains.mps.openapi.editor.style.Style;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.editor.runtime.style.StyleAttributes;
import java.awt.Color;

public class stil_StyleSheet {
  public static class textGreyStyleClass extends AbstractStyleClass {
    public textGreyStyleClass(EditorContext editorContext, SNode node) {
      super(editorContext, node);
    }
    public textGreyStyleClass(EditorBuilderEnvironment builderEnv) {
      super(builderEnv);
    }

    @Override
    public void apply(Style style, EditorCell editorCell) {
      style.set(StyleAttributes.TEXT_COLOR, getStyleRegistry().getSimpleColor(new Color(465234)));
    }

  }
  public static class textBlueStyleClass extends AbstractStyleClass {
    public textBlueStyleClass(EditorContext editorContext, SNode node) {
      super(editorContext, node);
    }
    public textBlueStyleClass(EditorBuilderEnvironment builderEnv) {
      super(builderEnv);
    }

    @Override
    public void apply(Style style, EditorCell editorCell) {
      style.set(StyleAttributes.TEXT_COLOR, getStyleRegistry().getSimpleColor(new Color(557973)));
    }

  }
  public static class textYellowStyleClass extends AbstractStyleClass {
    public textYellowStyleClass(EditorContext editorContext, SNode node) {
      super(editorContext, node);
    }
    public textYellowStyleClass(EditorBuilderEnvironment builderEnv) {
      super(builderEnv);
    }

    @Override
    public void apply(Style style, EditorCell editorCell) {
      style.set(StyleAttributes.TEXT_COLOR, getStyleRegistry().getSimpleColor(new Color(16646098)));
    }

  }
}
